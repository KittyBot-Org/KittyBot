/*
 * This file is generated by jOOQ.
 */
package de.kittybot.kittybot.jooq.tables;


import de.kittybot.kittybot.jooq.Keys;
import de.kittybot.kittybot.jooq.Public;
import de.kittybot.kittybot.jooq.tables.records.UserSettingsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSettings extends TableImpl<UserSettingsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.user_settings</code>
     */
    public static final UserSettings USER_SETTINGS = new UserSettings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserSettingsRecord> getRecordType() {
        return UserSettingsRecord.class;
    }

    /**
     * The column <code>public.user_settings.user_id</code>.
     */
    public final TableField<UserSettingsRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.user_settings.level_card_background_url</code>.
     */
    public final TableField<UserSettingsRecord, String> LEVEL_CARD_BACKGROUND_URL = createField(DSL.name("level_card_background_url"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.user_settings.level_card_background_color</code>.
     */
    public final TableField<UserSettingsRecord, Integer> LEVEL_CARD_BACKGROUND_COLOR = createField(DSL.name("level_card_background_color"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("3289650", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.user_settings.level_card_primary_color</code>.
     */
    public final TableField<UserSettingsRecord, Integer> LEVEL_CARD_PRIMARY_COLOR = createField(DSL.name("level_card_primary_color"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("6053866", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.user_settings.level_card_border_color</code>.
     */
    public final TableField<UserSettingsRecord, Integer> LEVEL_CARD_BORDER_COLOR = createField(DSL.name("level_card_border_color"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("16711679", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.user_settings.level_card_font_color</code>.
     */
    public final TableField<UserSettingsRecord, Integer> LEVEL_CARD_FONT_COLOR = createField(DSL.name("level_card_font_color"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("16711679", SQLDataType.INTEGER)), this, "");

    private UserSettings(Name alias, Table<UserSettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserSettings(Name alias, Table<UserSettingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.user_settings</code> table reference
     */
    public UserSettings(String alias) {
        this(DSL.name(alias), USER_SETTINGS);
    }

    /**
     * Create an aliased <code>public.user_settings</code> table reference
     */
    public UserSettings(Name alias) {
        this(alias, USER_SETTINGS);
    }

    /**
     * Create a <code>public.user_settings</code> table reference
     */
    public UserSettings() {
        this(DSL.name("user_settings"), null);
    }

    public <O extends Record> UserSettings(Table<O> child, ForeignKey<O, UserSettingsRecord> key) {
        super(child, key, USER_SETTINGS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<UserSettingsRecord> getPrimaryKey() {
        return Keys.USER_SETTINGS_PKEY;
    }

    @Override
    public List<UniqueKey<UserSettingsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserSettingsRecord>>asList(Keys.USER_SETTINGS_PKEY);
    }

    @Override
    public UserSettings as(String alias) {
        return new UserSettings(DSL.name(alias), this);
    }

    @Override
    public UserSettings as(Name alias) {
        return new UserSettings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSettings rename(String name) {
        return new UserSettings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSettings rename(Name name) {
        return new UserSettings(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
