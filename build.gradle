buildscript {
    repositories {
        maven {
            url "https://dl.bintray.com/kittybot-org/gradle-jooq-plugin"
        }
    }
    dependencies {
        classpath 'de.kittybot.jooq:gradle-jooq-plugin:5.2.3'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

apply plugin: 'de.kittybot.jooq'

group 'de.kittybot'
mainClassName = 'de.kittybot.kittybot.KittyBot'

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // discord/jda related
    implementation 'net.dv8tion:JDA:4.2.0_211'
    implementation 'com.jagrosh:jda-utilities:3.0.4'

    // audio
    implementation("com.github.KittyBot-Org:Lavalink-Client:40ee407472") {
        exclude group: 'com.sedmelluq', module: 'lavaplayer'
    }
    implementation 'com.github.devoxin:lavaplayer:1.3.59'
    implementation 'com.sedmelluq:jda-nas:1.1.0'

    // database
    implementation 'com.zaxxer:HikariCP:3.4.5'
    implementation 'org.postgresql:postgresql:42.2.18'
    implementation 'org.jooq:jooq:3.14.0'
    jooqGenerator 'org.postgresql:postgresql:42.2.18'

    // logging
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha5'
    implementation 'io.sentry:sentry-logback:3.1.1'

    // eval
    implementation 'org.codehaus.groovy:groovy-jsr223:3.0.6'

    // other
    implementation 'io.javalin:javalin:3.11.2'
    implementation 'io.github.classgraph:classgraph:4.8.90'
}

jooq {
    configurations {
        main {
            generateSchemaSourceOnCompilation = false
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    url = "jdbc:postgresql://${System.getenv('KITTYBOT_DB_HOST')}:${System.getenv('KITTYBOT_DB_PORT')}/${System.getenv('KITTYBOT_DB_DATABASE')}"
                    user = System.getenv('KITTYBOT_DB_USER')
                    password = System.getenv('KITTYBOT_DB_PASSWORD')
                    driver = 'org.postgresql.Driver'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                        includes = '.*'
                        excludes = ''
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'de.kittybot.kittybot.database.jooq'
                        directory = "${projectDir}/src/main/java"
                        clean = true
                    }
                    strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}

ext {
    moduleName = 'KittyBot'
}

compileJava.options.encoding = 'UTF-8'
