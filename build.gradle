plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
    id 'nu.studer.jooq' version '6.0.1'
}

group 'de.kittybot'
mainClassName = 'de.kittybot.kittybot.main.Main'

repositories {
    maven { url 'https://m2.dv8tion.net/releases' }
    maven { url 'https://jitpack.io' }
    mavenCentral()
    jcenter() // this is still required because of jda utilities
}

dependencies {
    // discord/jda related
    implementation('net.dv8tion:JDA:4.4.0_351') {
        exclude group: 'club.minnced', module: 'opus-java'
    }
    implementation 'com.jagrosh:jda-utilities:3.0.5'
    implementation 'club.minnced:discord-webhooks:0.7.3'
    implementation 'dev.mlnr:BotListHandler-jda:2.0.0_11'

    // audio
    implementation('com.github.KittyBot-Org:Lavalink-Client:d48f1a6') {
        exclude group: 'com.sedmelluq', module: 'lavaplayer'
    }
    implementation 'com.sedmelluq:lavaplayer:1.3.78'
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:7.0.0'

    // database
    implementation 'com.zaxxer:HikariCP:5.0.0'
    implementation 'org.jooq:jooq:3.15.5'
    implementation 'org.postgresql:postgresql:42.3.1'
    jooqGenerator 'org.postgresql:postgresql:42.3.0'

    // logging
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha10'
    implementation 'io.sentry:sentry-logback:5.4.3'

    // eval
    implementation 'org.codehaus.groovy:groovy-jsr223:3.0.9'

    // jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // Prometheus
    implementation 'io.prometheus:simpleclient:0.12.0'
    implementation 'io.prometheus:simpleclient_hotspot:0.12.0'
    implementation 'io.prometheus:simpleclient_httpserver:0.12.0'

    // other
    implementation 'io.javalin:javalin:4.1.1'
    implementation 'io.github.classgraph:classgraph:4.8.137'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.0.5'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
}

jooq {
    version = '3.15.2'
    configurations {
        main {
            generateSchemaSourceOnCompilation = false
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = "jdbc:postgresql://${KITTYBOT_DB_HOST}:${KITTYBOT_DB_PORT}/${KITTYBOT_DB_DATABASE}"
                    user = KITTYBOT_DB_USER
                    password = KITTYBOT_DB_PASSWORD
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                        includes = '.*'
                        excludes = ''
                    }
                    generate {
                        records = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'de.kittybot.kittybot.jooq'
                        directory = "src/main/jooq"
                    }
                    strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}

ext {
    moduleName = 'KittyBot'
}

sourceCompatibility = 1.11
compileJava.options.encoding = 'UTF-8'
